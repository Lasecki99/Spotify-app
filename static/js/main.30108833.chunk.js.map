{"version":3,"sources":["assets/music.jpg","assets/yt.webp","params/getHashParams.js","spotifyWebApi/spotifyWebApi.js","components/LoginPage.js","store/reducers/Album/albumReducerCreator.js","store/actions/actionTypes.js","components/MainRoute/SearchType/SearchItem.js/SearchItem.js","components/MainRoute/SearchType/SearchType.js","components/Spinner/Spinner.js","components/MainRoute/Search.js","store/reducers/Search/searchReducerCreators.js","components/MainRoute/NewReleases.js","store/reducers/NewReleases/newReleasesCreators.js","components/MusicBar/NowPlaying/NowPlaying.js","components/SongList/SongList.js","components/YtLink/YtLink.js","components/PlaybackView.js","components/MusicBar/MusicBar.js","components/GetMe/GetMe.js","store/reducers/GetMe/getMeCreator.js","App.js","serviceWorker.js","theme/theme.js","store/reducers/NewReleases/newReleases.js","store/reducers/App/appReducer.js","store/reducers/Search/searchReducer.js","store/reducers/Album/albumReducer.js","store/reducers/Playback/playbackReducer.js","store/reducers/Playlist/playlistReducer.js","store/reducers/GetMe/getMeReducer.js","index.js"],"names":["module","exports","getHashParams","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","spotifyWebApi","Spotify","LoginView","styled","div","LoginPage","href","getTrack","track","author","artists","name","audio","Audio","preview_url","updateState","res","type","value","checkAndReturnSongs","clickedSong","dispatch","id","getAlbumTracks","then","items","filter","item","map","catch","err","console","log","getArtistTopTracks","tracks","getPlaylistTracks","limit","SearchItem","useDispatch","className","onClick","src","images","length","url","jpg","alt","SearchTypeView","props","theme","alto","SearchType","data","key","v1","style","margin","color","Spinner","SearchView","mineShaft","codGray","Search","searchList","useSelector","state","searchReducer","isLoading","useState","inputValue","setInputValue","useEffect","search","arr","albums","playlists","getSearchList","onChange","target","placeholder","NewReleasesView","NewReleases","newReleases","getNewReleases","getNewReleasesSuccess","dataObject","NowPlayingView","NowPlaying","songToPlay","playbackReducer","SongListView","SongList","musicArr","albumReducer","song","YtView","a","YtLink","yt","PlaybackStyles","PlaybackView","player","useRef","current","ref","showSkipControls","onClickNext","index","indexOf","onClickPrevious","MusicAside","dustyGray","MusicBar","exact","to","path","component","GetMeView","ListView","ul","GetMe","user","getMeReducer","username","getMe","display_name","photo","localStorage","removeItem","origin","pathname","document","body","querySelector","classList","toggle","App","resetToken","alert","loggedIn","appReducer","getItem","setAccessToken","JSON","parse","bool","params","Object","keys","store","stringify","access_token","setItem","Date","now","expirationDate","Number","timeLeft","setTimeout","Boolean","hostname","match","initialState","action","concat","clicked","playlist","playlistReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30108833.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.4cbc434b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yt.29cbc2bb.webp\";","const getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n}\nexport default getHashParams;","import Spotify from 'spotify-web-api-js';\nexport const spotifyWebApi = new Spotify();","import React from 'react';\nimport styled from 'styled-components';\n\nconst LoginView = styled.div`\n\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10000;\n  background-color: black;\n\n  a {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-decoration: none;\n    color: white;\n    letter-spacing: 1px;\n    border: 3px solid white;\n    background-color: royalblue;\n    padding: 10px 15px;\n    border-radius: 30px;\n    font-size: 40px;\n    transition: .2s;\n\n    &:hover {\n      transform: translate(-50%, -50%) scale(1.2);\n      transform-origin: 50% 50%;\n    }\n  }\n\n  @media (max-width: 1024px) {\n\n    a {\n      width: 220px;\n      font-size: 20px;\n      padding: 5px 10px;\n      border-width: 2px;\n      text-align: center;\n    }\n  }\n`;\n\nconst LoginPage = () => {\n  return (\n    <LoginView>\n      <a href=\"https://spotify-app-pl.herokuapp.com/login\">Login with Spotify</a>\n    </LoginView>\n  );\n}\nexport default LoginPage;","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { SET_MUSIC_ARR } from '../../actions/actionTypes';\n\nconst getTrack = track => ({\n  author: track.artists[0].name,\n  name: track.name,\n  audio: new Audio(track.preview_url)\n});\n\nconst updateState = res => ({\n  type: SET_MUSIC_ARR,\n  value: res\n})\n\nexport const checkAndReturnSongs = clickedSong => {\n  return dispatch => {\n    if (clickedSong) {\n      const { type, id } = clickedSong;\n      switch (type) {\n        case 'album':\n          spotifyWebApi.getAlbumTracks(id)\n            .then(res => {\n              let track = res.items.filter(item => item.preview_url !== null);\n              track = track.map(r => getTrack(r));\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err));\n          break;\n        case 'artist':\n          spotifyWebApi.getArtistTopTracks(id, \"PL\")\n            .then(res => {\n              let track = res.tracks.filter(item => item.preview_url !== null);\n              track = track.map(r => getTrack(r))\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err));\n          break;\n        case 'playlist':\n          spotifyWebApi.getPlaylistTracks(id, { limit: 15 })\n            .then(res => {\n              let track = res.items.filter(item => item.track.preview_url !== null);\n              track = track.map(r => getTrack(r.track));\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err))\n          break;\n        case 'track':\n          spotifyWebApi.getTrack(id)\n            .then(res => {\n              let track = {};\n              if (res.preview_url) track = [getTrack(res)];\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err))\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}","export const RESET_LIST = 'RESET_LIST';\nexport const GET_SEARCH_LIST = 'GET_SEARCH_LIST';\nexport const SET_LOGGED_IN = 'SET_LOGGED_IN';\nexport const GET_NEW_RELEASES = 'GET_NEW_RELEASES';\nexport const SET_SONG_TO_PLAY = 'SET_SONG_TO_PLAY';\nexport const SET_MUSIC_ARR = 'SET_MUSIC_ARR';\nexport const SET_CLICKED_SONG = 'SET_CLICKED_SONG';\nexport const GET_ME = 'GET_ME';\nexport const ADD_TO_PLAYLIST = 'ADD_TO_PLAYLIST';\nexport const REMOVE_FROM_PLAYLIST = 'REMOVE_FROM_PLAYLIST';","import React from 'react';\nimport jpg from '../../../../assets/music.jpg'\nimport { useDispatch } from 'react-redux';\nimport { checkAndReturnSongs } from '../../../../store/reducers/Album/albumReducerCreator';\n\nconst SearchItem = ({ item }) => {\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"song\">\n        <img\n          onClick={() => dispatch(checkAndReturnSongs(item))}\n          src={item.images && item.images.length ? item.images[0].url : jpg}\n          alt=\"song\" />\n        <p\n          onClick={() => dispatch(checkAndReturnSongs(item))}\n          className='song-name'>{item.name}</p>\n      </div>\n    </>\n  );\n}\n\nexport default SearchItem;","import React from 'react';\nimport SearchItem from './SearchItem.js/SearchItem';\nimport { v1 } from 'uuid';\nimport styled from 'styled-components';\n\nconst SearchTypeView = styled.div`\n  display: inline-block;\n  \n    h2 {\n      color: ${props => props.theme.alto};\n      margin: 25px 0 25px 20px;\n    }\n\n    div.song {\n      display: inline-block;\n      width: 210px;\n      height: 258px;\n\n      img {\n        display: block;\n        width: 170px;\n        height: 170px;\n        cursor: pointer;\n        margin: 0 auto;\n        border-radius: 5px;\n      }\n\n      p {\n        cursor: pointer;\n        color: ${props => props.theme.alto};\n        text-align: center;\n        margin-top: 10px;\n      }\n    }\n\n    @media (max-width: 1024px) {\n      width: calc(100% - 60px);\n\n      div.song {\n        width: 100%;\n        margin: 0 auto;\n      }\n\n      h2 {\n        text-align: center;\n        margin: 25px auto;\n      }\n    }\n`;\n\nconst SearchType = ({ item }) => {\n  return (\n    <>\n      {item.data.items.length ? (\n        <SearchTypeView className={item.type}>\n          <h2>{item.type}</h2>\n          {item.data.items.map(data => <SearchItem key={v1()} item={data} />)}\n        </SearchTypeView>\n      ) : item.type !== 'New Releases' ? <h2 style={{ margin: '25px 0 25px 20px', color: '#ddd' }}>No {item.type} found</h2> : null}\n    </>\n  );\n}\nexport default SearchType;","import React from 'react';\nimport '../../styles/Spinner.css';\n\nconst Spinner = () => <div className = \"lds-ring\" ><div></div><div></div>< div></div><div></div></div>\n\nexport default Spinner;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SearchType from './SearchType/SearchType';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSearchList } from '../../store/reducers/Search/searchReducerCreators';\nimport { RESET_LIST } from '../../store/actions/actionTypes';\nimport Spinner from '../Spinner/Spinner';\n\nconst SearchView = styled.div`\n  width: calc(100% - 230px);\n  margin-left: 230px;\n  height: 100%;\n\n  input {\n    width: 100%;\n    background-color: ${props => props.theme.mineShaft};\n    color: #eee;\n    font-weight: 600;\n    font-size: 30px;\n    padding: 15px 40px;\n    outline: none;\n    border: none;\n  }\n\n  div.search-main-content {\n    height: calc(100% - 67px);\n    background-color: ${props => props.theme.codGray};\n    overflow: scroll;\n  }\n\n  @media (max-width: 1024px) {\n    margin-left: 60px;\n    width: 100%;\n\n    input {\n      width: calc(100% - 60px);\n      font-size: 18px;\n      padding: 10px 10px;\n    }\n  }\n`;\n\nconst Search = () => {\n\n  const searchList = useSelector(state => state.searchReducer.searchList);\n  const isLoading = useSelector(state => state.searchReducer.isLoading);\n  const dispatch = useDispatch();\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (inputValue) {\n      dispatch({ type: 'SET_LOADER' })\n      dispatch(getSearchList(inputValue));\n    }\n    else if (searchList.length && !inputValue) dispatch({ type: RESET_LIST });\n  }, [inputValue])\n\n  return (\n    <>\n      <SearchView >\n        <input value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          placeholder=\"Start typing...\"\n          type=\"text\" />\n        {isLoading ? <Spinner /> : <div className=\"search-main-content\">\n          {searchList ? searchList.map(item => (<SearchType key={item.type} item={item} />\n          )) : null}\n        </div>}\n      </SearchView>\n    </>\n  );\n}\n\nexport default Search;","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { GET_SEARCH_LIST } from '../../actions/actionTypes';\n\nconst updateState = res => {\n  return {\n    type: GET_SEARCH_LIST,\n    res\n  }\n}\n\nexport const getSearchList = inputValue => {\n  return dispatch => {\n    spotifyWebApi.search(inputValue, [\"album\", \"artist\", \"playlist\", \"track\"], { limit: 10 })\n      .then(res => {\n        const arr = [\n          { type: 'Albums', data: res.albums },\n          { type: 'Artists', data: res.artists },\n          { type: 'Playlists', data: res.playlists },\n          { type: 'Tracks', data: res.tracks }];\n        dispatch(updateState(arr));\n      }).catch(err => console.log(err))\n  }\n}","import React, { useEffect } from 'react';\nimport SearchType from './SearchType/SearchType';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getNewReleases } from '../../store/reducers/NewReleases/newReleasesCreators';\n\nconst NewReleasesView = styled.div`\n  width: calc(100% - 230px);\n  margin-left: 230px;\n  height: 100%;\n  overflow: scroll;\n\n  @media (max-width: 1024px) {\n    margin-left: 60px;\n    width: 100%;\n  }\n`;\n\nconst NewReleases = () => {\n\n  const newReleases = useSelector(state => state.newReleases.newReleases);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!newReleases.length) {\n      dispatch(getNewReleases());\n    }\n  }, [dispatch, newReleases])\n\n  const dataObject = [{ type: 'New Releases', data: { items: newReleases } }];\n\n  return (\n    <NewReleasesView>\n      {dataObject ? <div className='releases-wrapper'>{dataObject.map(item => <SearchType key={item.type} item={item} />)}</div> : null}\n    </NewReleasesView>\n  );\n}\n\nexport default NewReleases;","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { GET_NEW_RELEASES } from '../../actions/actionTypes';\n\nexport const getNewReleasesSuccess = res => ({\n  type: GET_NEW_RELEASES,\n  res\n})\n\nexport const getNewReleases = () => {\n  return dispatch => {\n    spotifyWebApi.getNewReleases({ limit: 10 })\n      .then(res => dispatch(getNewReleasesSuccess(res.albums.items)))\n      .catch(err => console.log(err));\n  }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nconst NowPlayingView = styled.div`\n  color: #999;\n  padding-top: 10px;\n\n  > h2 {\n    color: #eee;\n    padding-top: 15px;\n    font-size: 22px;\n  }\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`;\n\nconst NowPlaying = () => {\n\n  const songToPlay = useSelector(state => state.playbackReducer.songToPlay)\n\n  return (\n    <>\n      {songToPlay ?\n        <>\n          <NowPlayingView>\n            <h2>Now playing</h2>\n            <p className=\"song-list-name clickable\">{`${songToPlay.author} - ${songToPlay.name}`}</p>\n          </NowPlayingView>\n        </>\n        : null}\n    </>\n  );\n}\n\nexport default NowPlaying;","import React, { useEffect } from 'react';\nimport { v1 } from 'uuid';\nimport NowPlaying from '../MusicBar/NowPlaying/NowPlaying';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_SONG_TO_PLAY } from '../../store/actions/actionTypes';\nimport styled from 'styled-components';\n\nconst SongListView = styled.div`\n\n  h2 {\n    color: #eee;\n    padding-top: 8px;\n    padding-bottom: 4px;\n  }\n\n  p {\n    color: #999;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    text-align: left;\n    cursor: pointer;\n  }\n\n  p.selected {\n    color: #222;\n    background-color: #ddd;\n    font-weight: bold;\n  }\n\n  @media (max-width: 1024px) {\n    h2 {\n      display: none;\n    }\n\n    p {\n      display: none;\n    }\n\n    p.selected {\n      display: none;\n    }\n  }\n`;\n\nconst SongList = () => {\n\n  const dispatch = useDispatch();\n  const musicArr = useSelector(state => state.albumReducer.musicArr);\n  const songToPlay = useSelector(state => state.playbackReducer.songToPlay);\n\n  useEffect(() => {\n    if (musicArr.length) {\n      dispatch({ type: SET_SONG_TO_PLAY, song: musicArr[0] })\n    }\n  }, [musicArr])\n\n  return (\n    <SongListView>\n      <NowPlaying />\n      {musicArr.length ? <h2>List of songs</h2> : null}\n      {musicArr.length ? musicArr.map(item => {\n        const { author, name } = item;\n        return (\n          <p key={v1()} onClick={() => dispatch({ type: SET_SONG_TO_PLAY, song: item })} className={songToPlay === item ? 'selected' : ''}>{`${author} - ${name}`}</p>\n        )\n      }) : null}\n    </SongListView>\n  );\n}\n\nexport default SongList;","import React from 'react';\nimport yt from '../../assets/yt.webp';\nimport styled from 'styled-components';\n\nconst YtView = styled.a`\nposition: absolute;\nwidth: 60px;\nheight: 40px;\nbottom: 20px;\nleft: 40px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width:1024px) {\n    display: none;\n  }\n`;\n\nconst YtLink = ({ name, author }) => <YtView href={`https://www.youtube.com/results?search_query=${author}+-+${name}`} target='_blank'><img src={yt} alt=\"youtube\" /></YtView>\n\nexport default YtLink;","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_SONG_TO_PLAY } from '../store/actions/actionTypes';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport '../styles/scss/PlayerVariables.css';\nimport YtLink from './YtLink/YtLink';\n\nconst PlaybackStyles = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 90px;\n  width: 100vw;\n  background-color: ${props => props.theme.mineShaft};\n\n  > div.audio-player {\n      background-color: ${props => props.theme.mineShaft};\n      width: 500px;\n      margin: 0 auto;\n      box-shadow: none;\n  }\n\n  @media (max-width: 1024px) {\n      div.audio-player {\n          width: 360px;\n      }\n  }\n\n    /* > div.playback-text {\n        position: absolute;\n        display: inline-block;\n        bottom: 15px;\n        left: 15px;\n        > p {\n            color: ${props => props.theme.alto};\n            text-align: center;\n        }\n    } */\n`;\n\nconst PlaybackView = () => {\n\n  const songToPlay = useSelector(state => state.playbackReducer.songToPlay);\n  const musicArr = useSelector(state => state.albumReducer.musicArr);\n  const dispatch = useDispatch();\n  const player = useRef();\n\n  const nextSong = () => {\n    if (songToPlay) {\n      let index = musicArr.indexOf(songToPlay);\n      index += 1;\n      if (index === musicArr.length) index = 0;\n      dispatch({ type: SET_SONG_TO_PLAY, song: musicArr[index] })\n    }\n  }\n\n  const previousSong = () => {\n    if (songToPlay) {\n      let index = musicArr.indexOf(songToPlay);\n      index -= 1;\n      if (index < 0) index = musicArr.length - 1;\n      dispatch({ type: SET_SONG_TO_PLAY, song: musicArr[index] })\n    }\n  }\n\n  useEffect(() => {\n    if (songToPlay) player.current.audio.src = songToPlay.audio.src\n  }, [songToPlay])\n\n\n  return (\n    <PlaybackStyles>\n      {/* <div className=\"playback-text\">\n        {songToPlay ?\n          <>\n            <p className=\"current-title\">{songToPlay.name}</p>\n            <p className=\"current-author\">{songToPlay.author}</p>\n          </> : null}\n      </div> */}\n      {songToPlay ? <YtLink name={songToPlay.name} author={songToPlay.author} /> : null}\n      <AudioPlayer\n        className='audio-player'\n        ref={player}\n        showSkipControls\n        onClickNext={nextSong}\n        onClickPrevious={previousSong} />\n    </PlaybackStyles>\n  );\n}\n\nexport default PlaybackView;","import React from 'react';\nimport { NavLink, Route, BrowserRouter } from 'react-router-dom';\nimport Search from '../MainRoute/Search';\nimport NewReleases from '../MainRoute/NewReleases';\n// import Playlist from '../MainRoute/Playlist';\nimport SongList from '../SongList/SongList';\nimport PlaybackView from '../PlaybackView';\n\nimport styled from 'styled-components';\n\nconst MusicAside = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 90px;\n  width: 230px;\n  background-color: black;\n  overflow: scroll;\n\n  > ul {\n    display: flex;\n    flex-direction: column;\n    margin: 30px 0 0 30px;\n\n    > a {\n      margin: 4px 0;\n      z-index: 1000000;\n      color: ${props => props.theme.dustyGray};\n\n      &:hover i,\n      &:hover p,\n      &.active i,\n      &.active p {\n        color: ${props => props.theme.alto}\n      }\n\n      > p {\n        z-index: -1;\n        display: inline-block;\n        margin-left: 10px;\n        font-size: 18px;\n        vertical-align: -1px;\n      }\n\n      > i {\n        font-size: 19px;\n        z-index: -1;\n      }\n    }\n  }\n\n  @media (max-width: 1024px) {\n    width: 60px;\n\n    ul {\n      margin: 15px 0 0 15px;\n\n      a {\n\n        p {\n          display: none;\n        }\n\n        i {\n          font-size: 26px;\n          margin: 10px 0;\n        }\n      }\n    }\n  }\n`;\n\nconst MusicBar = () => {\n\n  return (\n    <>\n      <BrowserRouter>\n        <MusicAside>\n          <ul>\n            <NavLink exact to=\"/\"><i className=\"fas fa-search\"></i><p>Search</p></NavLink>\n            <NavLink to=\"/new-releases\"><i className=\"fas fa-compact-disc\"></i><p>New releases</p></NavLink>\n            {/* <NavLink to=\"/playlist\"><i className=\"fas fa-sliders-h\"></i><p>Playlist</p></NavLink> */}\n            <SongList />\n          </ul>\n        </MusicAside>\n        <Route path=\"/new-releases\" component={NewReleases} />\n        {/* <Route path=\"/playlist\" component={Playlist} /> */}\n        <Route path=\"/\" component={Search} />\n        <PlaybackView />\n      </BrowserRouter>\n    </>\n  );\n}\nexport default MusicBar;","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getMeFetch } from '../../store/reducers/GetMe/getMeCreator';\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst GetMeView = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  border: 1px solid ${props => props.theme.alto};\n  border-radius: 20px;\n  padding: 2px 6px;\n  cursor: pointer;\n  background-color: ${props => props.theme.codGray};\n  transition: .2s;\n\n  &:hover {\n    background-color: gray;\n  }\n\n  > i {\n    color: white;\n    margin-right: 3px;\n\n    &.hide {\n      display: none;\n    }\n  }\n\n  > img {\n  width: 30px;\n  height: 30px;\n  border-radius: 50px;\n  margin-left: 10px;\n  }\n\n  > p {\n  color: ${props => props.theme.alto};\n  font-size: 12px;\n  font-weight: bold;\n  }\n  \n  @media (max-width: 1024px) {\n    display: none;\n  }\n  `;\n\nconst ListView = styled.ul`\n  position: absolute;\n  display: table;\n  bottom: 65px;\n  right: 28px;\n  color: ${props => props.theme.alto};\n  border: 1px solid ${props => props.theme.alto};\n  background-color: ${props => props.theme.codGray};\n  border-radius: 5px;\n  cursor: pointer;\n\n  &.hide {\n    display: none;\n  }\n\n  > li {\n    display: table-cell;\n    width: 100%;\n    height: 100%;\n    padding: 5px 45px;\n    transition: .2s;\n\n    &:hover {\n      background-color: gray;\n    }\n  }\n`;\n\nconst GetMe = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.getMeReducer.user);\n\n  const expandOptions = () => {\n    const hide = 'hide';\n    document.body.querySelector('i.fa-angle-up').classList.toggle(hide);\n    document.body.querySelector('i.fa-angle-down').classList.toggle(hide);\n    document.body.querySelector('ul.user-list').classList.toggle(hide);\n  }\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    window.location.href = window.location.origin + window.location.pathname;\n  }\n\n  useEffect(() => {\n    if (!user.username) dispatch(getMeFetch());\n  }, [dispatch, user])\n\n  return (\n    <>\n      <ListView className='user-list hide'><li onClick={logout}>Logout</li></ListView>\n      <GetMeView onClick={expandOptions}>\n        {user.username ?\n          <>\n            <i className=\"fas fa-angle-down\"></i>\n            <i className=\"fas fa-angle-up hide\"></i>\n            <p>{user.username}</p>\n            <img src={user.photo} alt='you' />\n          </>\n          : null}\n      </GetMeView>\n    </>\n  );\n}\n\nexport default GetMe;","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { GET_ME } from '../../actions/actionTypes';\nconst randomUser = 'https://www.kindpng.com/picc/m/80-800188_random-user-random-icon-png-transparent-png.png';\n\nconst getMeFetchSuccess = (name, photo) => ({\n  type: GET_ME,\n  name,\n  photo\n})\n\nexport const getMeFetch = () => dispatch => {\n\n  spotifyWebApi.getMe()\n    .then(res => dispatch(getMeFetchSuccess(res.display_name, res.images.length ? res.images[0].url : randomUser)))\n    .catch(err => console.log(err))\n}","import React from 'react';\nimport getHashParams from './params/getHashParams';\nimport { spotifyWebApi } from './spotifyWebApi/spotifyWebApi';\nimport LoginPage from './components/LoginPage';\nimport MusicBar from './components/MusicBar/MusicBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_LOGGED_IN } from './store/actions/actionTypes';\nimport GetMe from './components/GetMe/GetMe';\n\nconst App = () => {\n\n   const resetToken = () => {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('expirationDate');\n      alert('Please login again ;)');\n      window.location.href = window.location.origin + window.location.pathname;\n   }\n\n   const loggedIn = useSelector(state => state.appReducer.loggedIn);\n   const dispatch = useDispatch();\n\n   if (localStorage.getItem('accessToken')) {\n      spotifyWebApi.setAccessToken(JSON.parse(localStorage.getItem('accessToken')));\n      if (!loggedIn) dispatch({ type: SET_LOGGED_IN, bool: true });\n   } else {\n      const params = getHashParams();\n      if (Object.keys(params).length) {\n         const store = JSON.stringify(params.access_token);\n         localStorage.setItem('accessToken', store);\n         localStorage.setItem(\"expirationDate\", Date.now() + 3600 * 1000);\n         spotifyWebApi.setAccessToken(params.access_token);\n         if (!loggedIn) dispatch({ type: SET_LOGGED_IN, bool: true });\n      }\n   }\n\n   const expirationDate = Number(localStorage.getItem(\"expirationDate\"));\n\n   if (expirationDate && expirationDate < Date.now()) {\n      resetToken();\n   } else {\n      const timeLeft = expirationDate - Date.now();\n      setTimeout(resetToken, timeLeft);\n   }\n\n   return (\n      <>\n         {loggedIn ? <div className=\"App\">\n            <MusicBar />\n            <GetMe />\n         </div> : <LoginPage />}\n      </>\n   );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const dustyGray = '#999';\nexport const alto = '#ddd';\nexport const codGray = '#121212';\nexport const mineShaft = '#282828';","import { GET_NEW_RELEASES } from '../../actions/actionTypes';\n\nconst initialState = {\n  newReleases: []\n}\n\nconst newReleases = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NEW_RELEASES:\n      return {\n        ...state,\n        newReleases: state.newReleases.concat(action.res)\n      }\n    default:\n      return state;\n  }\n}\n\nexport default newReleases;","import { SET_LOGGED_IN } from '../../actions/actionTypes';\n\nconst initialState = {\n  loggedIn: false\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN:\n      return {\n        ...state,\n        loggedIn: action.bool\n      }\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","import { GET_SEARCH_LIST, RESET_LIST } from '../../actions/actionTypes';\n\nconst initialState = {\n  searchList: [],\n  isLoading: false\n}\n\nconst searchReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case GET_SEARCH_LIST:\n      return {\n        ...state,\n        searchList: action.res,\n        isLoading: false\n      }\n    case RESET_LIST:\n      return {\n        ...state,\n        searchList: []\n      }\n\n    case 'SET_LOADER':\n      return {\n        ...state,\n        isLoading: true\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default searchReducer;","import { SET_MUSIC_ARR, SET_CLICKED_SONG } from '../../actions/actionTypes';\n\nconst initialState = {\n  clickedSong: null,\n  musicArr: []\n}\n\nconst albumReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case SET_CLICKED_SONG:\n      return {\n        ...state,\n        clickedSong: action.clicked\n      }\n    case SET_MUSIC_ARR:\n      return {\n        ...state,\n        musicArr: action.value\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default albumReducer;","import { SET_SONG_TO_PLAY } from '../../actions/actionTypes';\n\nconst initialState = {\n  songToPlay: null\n}\n\nconst playbackReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case SET_SONG_TO_PLAY:\n      return {\n        ...state,\n        songToPlay: action.song\n      }\n    default:\n      return state;\n  }\n}\n\nexport default playbackReducer;","import { ADD_TO_PLAYLIST, REMOVE_FROM_PLAYLIST } from '../../actions/actionTypes';\n\nconst initialState = {\n  playlist: []\n}\n\nconst playlistReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case ADD_TO_PLAYLIST:\n      return {\n        ...state,\n        playlist: state.playlist.concat(action.song)\n      }\n    case REMOVE_FROM_PLAYLIST:\n      return {\n        ...state,\n        playlist: state.playlist.filter(item => item.id !== action.id)\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default playlistReducer;","import { GET_ME } from '../../actions/actionTypes';\n\nconst initialState = {\n  user: {\n    username: null,\n    photo: null\n  }\n}\n\nconst getMeReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case GET_ME:\n      return {\n        ...state,\n        user: { username: action.name, photo: action.photo }\n      }\n    default:\n      return state;\n  }\n}\n\nexport default getMeReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from 'styled-components'\nimport * as theme from './theme/theme';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport newReleases from './store/reducers/NewReleases/newReleases';\nimport appReducer from './store/reducers/App/appReducer';\nimport searchReducer from './store/reducers/Search/searchReducer';\nimport albumReducer from './store/reducers/Album/albumReducer';\nimport playbackReducer from './store/reducers/Playback/playbackReducer';\nimport playlistReducer from './store/reducers/Playlist/playlistReducer';\nimport getMeReducer from './store/reducers/GetMe/getMeReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  newReleases,\n  appReducer,\n  searchReducer,\n  albumReducer,\n  playbackReducer,\n  playlistReducer,\n  getMeReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><ThemeProvider theme={theme}><App /></ThemeProvider></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}