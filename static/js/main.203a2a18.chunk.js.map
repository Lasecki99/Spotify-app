{"version":3,"sources":["assets/music.jpg","assets/yt.webp","params/getHashParams.js","spotifyWebApi/spotifyWebApi.ts","components/LoginPage/LoginPage.styled.ts","components/LoginPage/LoginPage.tsx","components/MusicBar/MusicBar.styled.ts","components/MainRoute/Search/Search.styled.ts","components/MainRoute/SearchType/SearchType.styled.ts","store/reducers/Album/albumReducerCreator.js","store/actions/actionTypes.ts","components/MainRoute/SearchType/SearchItem.js/SearchItem.tsx","components/MainRoute/SearchType/SearchType.tsx","components/Spinner/Spinner.tsx","components/MainRoute/Search/Search.tsx","store/reducers/Search/searchReducerCreators.js","components/MainRoute/NewReleases/NewReleases.styled.ts","components/MainRoute/NewReleases/NewReleases.tsx","store/reducers/NewReleases/newReleasesCreators.js","components/SongList/SongList.styled.ts","components/MusicBar/NowPlaying/NowPlaying.styled.ts","components/MusicBar/NowPlaying/NowPlaying.tsx","components/SongList/SongList.tsx","components/PlaybackView/PlaybackView.styled.ts","components/YtLink/YtLink.styled.js","components/YtLink/YtLink.tsx","components/PlaybackView/PlaybackView.tsx","components/MusicBar/MusicBar.tsx","components/GetMe/GetMe.styled.ts","components/GetMe/GetMe.tsx","store/reducers/GetMe/getMeCreator.js","App.js","theme/theme.ts","store/reducers/NewReleases/newReleases.js","store/reducers/App/appReducer.js","store/reducers/Search/searchReducer.js","store/reducers/Album/albumReducer.js","store/reducers/Playback/playbackReducer.js","store/reducers/Playlist/playlistReducer.js","store/reducers/GetMe/getMeReducer.js","index.tsx"],"names":["module","exports","getHashParams","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","spotifyWebApi","Spotify","Login","styled","div","LoginPage","href","Music","props","theme","dustyGray","alto","Search","mineShaft","codGray","SearchType","getTrack","track","author","artists","name","audio","Audio","preview_url","updateState","res","type","value","checkAndReturnSongs","clickedSong","dispatch","id","getAlbumTracks","then","items","filter","item","map","catch","err","console","log","getArtistTopTracks","tracks","getPlaylistTracks","limit","SearchItem","useDispatch","className","onClick","src","images","length","url","jpg","alt","data","key","v1","style","margin","color","Spinner","searchList","useSelector","state","searchReducer","isLoading","useState","inputValue","setInputValue","useEffect","search","arr","albums","playlists","getSearchList","onChange","target","placeholder","NewReleases","newReleases","getNewReleases","getNewReleasesSuccess","dataObject","SongList","NowPlaying","songToPlay","playbackReducer","musicArr","albumReducer","song","Playback","Yt","a","YtLink","yt","PlaybackView","player","useRef","current","ref","showSkipControls","onClickNext","index","indexOf","onClickPrevious","MusicBar","exact","to","path","component","GetMe","List","ul","list","arrowUp","arrowDown","user","getMeReducer","username","getMe","display_name","photo","localStorage","removeItem","origin","pathname","classList","toggle","App","resetToken","alert","loggedIn","appReducer","storageAccessToken","getItem","setAccessToken","JSON","parse","bool","params","Object","keys","store","stringify","access_token","setItem","Date","now","expirationDate","Number","timeLeft","setTimeout","initialState","action","concat","clicked","playlist","playlistReducer","composeEnhancers","compose","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.203a2a18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.4cbc434b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yt.29cbc2bb.webp\";","const getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n}\nexport default getHashParams;","import Spotify from 'spotify-web-api-js';\nexport const spotifyWebApi = new Spotify();","import styled from 'styled-components';\n\nexport const Login = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10000;\n  background-color: black;\n\n  a {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-decoration: none;\n    color: white;\n    letter-spacing: 1px;\n    border: 3px solid white;\n    background-color: royalblue;\n    padding: 10px 15px;\n    border-radius: 30px;\n    font-size: 40px;\n    transition: 0.2s;\n\n    &:hover {\n      transform: translate(-50%, -50%) scale(1.2);\n      transform-origin: 50% 50%;\n    }\n  }\n\n  @media (max-width: 1024px) {\n    a {\n      width: 220px;\n      font-size: 20px;\n      padding: 5px 10px;\n      border-width: 2px;\n      text-align: center;\n    }\n  }\n`;\n","import React from 'react';\nimport * as S from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <S.Login>\n      <a href=\"https://spotify-app-pl.herokuapp.com/login\">\n        Login with Spotify\n      </a>\n    </S.Login>\n  );\n};\nexport default LoginPage;\n","import styled from 'styled-components';\n\nexport const Music = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 90px;\n  width: 230px;\n  background-color: black;\n  overflow: scroll;\n\n  > ul {\n    display: flex;\n    flex-direction: column;\n    margin: 30px 0 0 30px;\n\n    > a {\n      margin: 4px 0;\n      z-index: 1000000;\n      color: ${props => props.theme.dustyGray};\n\n      &:hover i,\n      &:hover p,\n      &.active i,\n      &.active p {\n        color: ${props => props.theme.alto};\n      }\n\n      > p {\n        z-index: -1;\n        display: inline-block;\n        margin-left: 10px;\n        font-size: 18px;\n        vertical-align: -1px;\n      }\n\n      > i {\n        font-size: 19px;\n        z-index: -1;\n      }\n    }\n  }\n\n  @media (max-width: 1024px) {\n    width: 60px;\n\n    ul {\n      margin: 15px 0 0 15px;\n\n      a {\n        p {\n          display: none;\n        }\n\n        i {\n          font-size: 26px;\n          margin: 10px 0;\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Search = styled.div`\n  width: calc(100% - 230px);\n  margin-left: 230px;\n  height: 100%;\n\n  input {\n    width: 100%;\n    background-color: ${props => props.theme.mineShaft};\n    color: #eee;\n    font-weight: 600;\n    font-size: 30px;\n    padding: 15px 40px;\n    outline: none;\n    border: none;\n  }\n\n  div.search-main-content {\n    height: calc(100% - 67px);\n    background-color: ${props => props.theme.codGray};\n    overflow: scroll;\n  }\n\n  @media (max-width: 1024px) {\n    margin-left: 60px;\n    width: 100%;\n\n    input {\n      width: calc(100% - 60px);\n      font-size: 18px;\n      padding: 10px 10px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const SearchType = styled.div`\n  display: inline-block;\n\n  h2 {\n    color: ${props => props.theme.alto};\n    margin: 25px 0 25px 20px;\n  }\n\n  div.song {\n    display: inline-block;\n    width: 210px;\n    height: 258px;\n\n    img {\n      display: block;\n      width: 170px;\n      height: 170px;\n      cursor: pointer;\n      margin: 0 auto;\n      border-radius: 5px;\n    }\n\n    p {\n      cursor: pointer;\n      color: ${props => props.theme.alto};\n      text-align: center;\n      margin-top: 10px;\n    }\n  }\n\n  @media (max-width: 1024px) {\n    width: calc(100% - 60px);\n\n    div.song {\n      width: 100%;\n      margin: 0 auto;\n    }\n\n    h2 {\n      text-align: center;\n      margin: 25px auto;\n    }\n  }\n`;\n","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { SET_MUSIC_ARR } from '../../actions/actionTypes';\n\nconst getTrack = track => ({\n  author: track.artists[0].name,\n  name: track.name,\n  audio: new Audio(track.preview_url)\n});\n\nconst updateState = res => ({\n  type: SET_MUSIC_ARR,\n  value: res\n})\n\nexport const checkAndReturnSongs = clickedSong => {\n  return dispatch => {\n    if (clickedSong) {\n      const { type, id } = clickedSong;\n      switch (type) {\n        case 'album':\n          spotifyWebApi.getAlbumTracks(id)\n            .then(res => {\n              let track = res.items.filter(item => item.preview_url !== null);\n              track = track.map(r => getTrack(r));\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err));\n          break;\n        case 'artist':\n          spotifyWebApi.getArtistTopTracks(id, \"PL\")\n            .then(res => {\n              let track = res.tracks.filter(item => item.preview_url !== null);\n              track = track.map(r => getTrack(r))\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err));\n          break;\n        case 'playlist':\n          spotifyWebApi.getPlaylistTracks(id, { limit: 15 })\n            .then(res => {\n              let track = res.items.filter(item => item.track.preview_url !== null);\n              track = track.map(r => getTrack(r.track));\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err))\n          break;\n        case 'track':\n          spotifyWebApi.getTrack(id)\n            .then(res => {\n              let track = {};\n              if (res.preview_url) track = [getTrack(res)];\n              dispatch(updateState(track));\n            })\n            .catch(err => console.log(err))\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}","export const RESET_LIST = 'RESET_LIST';\nexport const GET_SEARCH_LIST = 'GET_SEARCH_LIST';\nexport const SET_LOGGED_IN = 'SET_LOGGED_IN';\nexport const GET_NEW_RELEASES = 'GET_NEW_RELEASES';\nexport const SET_SONG_TO_PLAY = 'SET_SONG_TO_PLAY';\nexport const SET_MUSIC_ARR = 'SET_MUSIC_ARR';\nexport const SET_CLICKED_SONG = 'SET_CLICKED_SONG';\nexport const GET_ME = 'GET_ME';\nexport const ADD_TO_PLAYLIST = 'ADD_TO_PLAYLIST';\nexport const REMOVE_FROM_PLAYLIST = 'REMOVE_FROM_PLAYLIST';","import React from 'react';\nimport jpg from '../../../../assets/music.jpg'\nimport { useDispatch } from 'react-redux';\nimport { checkAndReturnSongs } from '../../../../store/reducers/Album/albumReducerCreator';\n\ntype RootState = {\n  item: {\n    images: [{ url: string }],\n    name: string\n  }\n}\n\nconst SearchItem = ({ item }: RootState) => {\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"song\">\n        <img\n          onClick={() => dispatch(checkAndReturnSongs(item))}\n          src={item.images && item.images.length ? item.images[0].url : jpg}\n          alt=\"song\" />\n        <p\n          onClick={() => dispatch(checkAndReturnSongs(item))}\n          className='song-name'>{item.name}</p>\n      </div>\n    </>\n  );\n}\n\nexport default SearchItem;","import React from 'react';\nimport * as S from './SearchType.styled';\nimport SearchItem from './SearchItem.js/SearchItem';\nimport { v1 } from 'uuid';\n\ntype RootState = {\n  item: {\n    data: {\n      items: []\n    }\n    type: string\n  }\n}\n\nconst SearchType = ({ item }: RootState) => {\n  return (\n    <>\n      {item.data.items.length ? (\n        <S.SearchType className={item.type}>\n          <h2>{item.type}</h2>\n          {item.data.items.map(data => (\n            <SearchItem key={v1()} item={data} />\n          ))}\n        </S.SearchType>\n      ) : item.type !== 'New Releases' ? (\n        <h2 style={{ margin: '25px 0 25px 20px', color: '#ddd' }}>\n          No {item.type} found\n        </h2>\n      ) : null}\n    </>\n  );\n};\nexport default SearchType;\n","import React from 'react';\nimport '../../styles/Spinner.css';\n\nconst Spinner: React.FC = () => <div className=\"lds-ring\" ><div></div><div></div>< div></div><div></div></div>\n\nexport default Spinner;","import React, { useEffect, useState } from 'react';\nimport * as S from './Search.styled';\nimport SearchType from '../SearchType/SearchType';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSearchList } from '../../../store/reducers/Search/searchReducerCreators';\nimport { RESET_LIST } from '../../../store/actions/actionTypes';\nimport Spinner from '../../Spinner/Spinner';\n\ntype RootState = {\n  searchReducer: {\n    searchList: [{ type: string, data: { items: [] }}],\n    isLoading: boolean\n  }\n}\n\nconst Search = () => {\n  const searchList = useSelector((state: RootState) => state.searchReducer.searchList);\n  const isLoading = useSelector((state: RootState) => state.searchReducer.isLoading);\n  const dispatch = useDispatch();\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (inputValue) {\n      dispatch({ type: 'SET_LOADER' });\n      dispatch(getSearchList(inputValue));\n    } else if (searchList.length && !inputValue) dispatch({ type: RESET_LIST });\n  }, [inputValue]);\n\n  return (\n    <>\n      <S.Search>\n        <input\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          placeholder=\"Start typing...\"\n          type=\"text\"\n        />\n        {isLoading ? (\n          <Spinner />\n        ) : (\n            <div className=\"search-main-content\">\n              {searchList\n                ? searchList.map(item => (\n                  <SearchType key={item.type} item={item} />\n                ))\n                : null}\n            </div>\n          )}\n      </S.Search>\n    </>\n  );\n};\n\nexport default Search;\n","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { GET_SEARCH_LIST } from '../../actions/actionTypes';\n\nconst updateState = res => {\n  return {\n    type: GET_SEARCH_LIST,\n    res\n  }\n}\n\nexport const getSearchList = inputValue => {\n  return dispatch => {\n    spotifyWebApi.search(inputValue, [\"album\", \"artist\", \"playlist\", \"track\"], { limit: 10 })\n      .then(res => {\n        const arr = [\n          { type: 'Albums', data: res.albums },\n          { type: 'Artists', data: res.artists },\n          { type: 'Playlists', data: res.playlists },\n          { type: 'Tracks', data: res.tracks }];\n        dispatch(updateState(arr));\n      }).catch(err => console.log(err))\n  }\n}","import styled from 'styled-components';\n\nexport const NewReleases = styled.div`\n  width: calc(100% - 230px);\n  margin-left: 230px;\n  height: 100%;\n  overflow: scroll;\n\n  @media (max-width: 1024px) {\n    margin-left: 60px;\n    width: 100%;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport * as S from './NewReleases.styled';\nimport SearchType from '../SearchType/SearchType';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getNewReleases } from '../../../store/reducers/NewReleases/newReleasesCreators';\n\ntype RootState = {\n  newReleases: {\n    newReleases: []\n  }\n}\n\nconst NewReleases = () => {\n  const newReleases = useSelector((state: RootState) => state.newReleases.newReleases);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!newReleases.length) {\n      dispatch(getNewReleases());\n    }\n  }, [dispatch, newReleases]);\n\n  const dataObject = [{ type: 'New Releases', data: { items: newReleases } }];\n\n  return (\n    <S.NewReleases>\n      {dataObject ? (\n        <div className=\"releases-wrapper\">\n          {dataObject.map(item => (\n            <SearchType key={item.type} item={item} />\n          ))}\n        </div>\n      ) : null}\n    </S.NewReleases>\n  );\n};\n\nexport default NewReleases;\n","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { GET_NEW_RELEASES } from '../../actions/actionTypes';\n\nexport const getNewReleasesSuccess = res => ({\n  type: GET_NEW_RELEASES,\n  res\n})\n\nexport const getNewReleases = () => {\n  return dispatch => {\n    spotifyWebApi.getNewReleases({ limit: 10 })\n      .then(res => dispatch(getNewReleasesSuccess(res.albums.items)))\n      .catch(err => console.log(err));\n  }\n}","import styled from 'styled-components';\n\nexport const SongList = styled.div`\n  h2 {\n    color: #eee;\n    padding-top: 8px;\n    padding-bottom: 4px;\n  }\n\n  p {\n    color: #999;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    text-align: left;\n    cursor: pointer;\n  }\n\n  p.selected {\n    color: #222;\n    background-color: #ddd;\n    font-weight: bold;\n  }\n\n  @media (max-width: 1024px) {\n    h2 {\n      display: none;\n    }\n\n    p {\n      display: none;\n    }\n\n    p.selected {\n      display: none;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const NowPlaying = styled.div`\n  color: #999;\n  padding-top: 10px;\n\n  > h2 {\n    color: #eee;\n    padding-top: 15px;\n    font-size: 22px;\n  }\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport * as S from './NowPlaying.styled';\nimport { useSelector } from 'react-redux';\n\ntype RootState = {\n  playbackReducer: {\n    songToPlay: {\n      author: string,\n      name: string\n    }\n  }\n}\n\nconst NowPlaying = () => {\n  const songToPlay = useSelector((state: RootState) => state.playbackReducer.songToPlay);\n\n  return (\n    <>\n      {songToPlay ? (\n        <>\n          <S.NowPlaying>\n            <h2>Now playing</h2>\n            <p className=\"song-list-name clickable\">{`${songToPlay.author} - ${songToPlay.name}`}</p>\n          </S.NowPlaying>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default NowPlaying;\n","import React, { useEffect } from 'react';\nimport * as S from './SongList.styled';\nimport { v1 } from 'uuid';\nimport NowPlaying from '../MusicBar/NowPlaying/NowPlaying';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_SONG_TO_PLAY } from '../../store/actions/actionTypes';\n\ntype RootState = {\n  albumReducer: {\n    musicArr: [{author: string, name: string}]\n  },\n  playbackReducer: {\n    songToPlay: {\n      author: string,\n      name: string\n    }\n  }\n}\n\nconst SongList = () => {\n  const dispatch = useDispatch();\n  const musicArr = useSelector((state: RootState) => state.albumReducer.musicArr);\n  const songToPlay = useSelector((state: RootState) => state.playbackReducer.songToPlay);\n\n  useEffect(() => {\n    if (musicArr.length) {\n      dispatch({ type: SET_SONG_TO_PLAY, song: musicArr[0] });\n    }\n  }, [musicArr]);\n\n  return (\n    <S.SongList>\n      <NowPlaying />\n      {musicArr.length ? <h2>List of songs</h2> : null}\n      {musicArr.length\n        ? musicArr.map(item => {\n            const { author, name } = item;\n            return (\n              <p\n                key={v1()}\n                onClick={() => dispatch({ type: SET_SONG_TO_PLAY, song: item })}\n                className={songToPlay === item ? 'selected' : ''}\n              >{`${author} - ${name}`}</p>\n            );\n          })\n        : null}\n    </S.SongList>\n  );\n};\n\nexport default SongList;\n","import styled from 'styled-components';\n\nexport const Playback = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 90px;\n  width: 100vw;\n  background-color: ${props => props.theme.mineShaft};\n\n  > div.audio-player {\n      background-color: ${props => props.theme.mineShaft};\n      width: 500px;\n      margin: 0 auto;\n      box-shadow: none;\n  }\n\n  @media (max-width: 1024px) {\n      div.audio-player {\n          width: 360px;\n      }\n  }\n\n    /* > div.playback-text {\n        position: absolute;\n        display: inline-block;\n        bottom: 15px;\n        left: 15px;\n        > p {\n            color: ${props => props.theme.alto};\n            text-align: center;\n        }\n    } */\n`;\n","import styled from 'styled-components';\n\nexport const Yt = styled.a`\n  position: absolute;\n  width: 60px;\n  height: 40px;\n  bottom: 20px;\n  left: 40px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport * as S from './YtLink.styled';\nimport yt from '../../assets/yt.webp';\n\ntype YtLinkProps = {\n  name: string\n  author: string\n}\n\nconst YtLink = ({ name, author }: YtLinkProps) => (\n  <S.Yt\n    href={`https://www.youtube.com/results?search_query=${author}+-+${name}`}\n    target=\"_blank\"\n  >\n    <img src={yt} alt=\"youtube\" />\n  </S.Yt>\n);\n\nexport default YtLink;\n","import React, { useRef, useEffect } from 'react';\nimport * as S from './PlaybackView.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_SONG_TO_PLAY } from '../../store/actions/actionTypes';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport '../../styles/scss/PlayerVariables.css';\nimport YtLink from '../YtLink/YtLink';\nimport H5AudioPlayer from 'react-h5-audio-player';\n\ntype RootState = {\n  playbackReducer: {\n    songToPlay: {\n      audio: {src: string},\n      name: string,\n      author: string\n    }\n  },\n  albumReducer: {\n    musicArr: object[]\n  }\n}\n\nconst PlaybackView = () => {\n  const songToPlay = useSelector((state: RootState) => state.playbackReducer.songToPlay);\n  const musicArr = useSelector((state: RootState) => state.albumReducer.musicArr);\n  const dispatch = useDispatch();\n  const player = useRef<H5AudioPlayer>(null);\n\n  const nextSong = () => {\n    if (songToPlay) {\n      let index = musicArr.indexOf(songToPlay);\n      index += 1;\n      if (index === musicArr.length) index = 0;\n      dispatch({ type: SET_SONG_TO_PLAY, song: musicArr[index] });\n    }\n  };\n\n  const previousSong = () => {\n    if (songToPlay) {\n      let index = musicArr.indexOf(songToPlay);\n      index -= 1;\n      if (index < 0) index = musicArr.length - 1;\n      dispatch({ type: SET_SONG_TO_PLAY, song: musicArr[index] });\n    }\n  };\n\n  useEffect(() => {\n    if (songToPlay && player.current) player.current.audio.src = songToPlay.audio.src;\n  }, [songToPlay]);\n\n  return (\n    <S.Playback>\n      {/* <div className=\"playback-text\">\n        {songToPlay ?\n          <>\n            <p className=\"current-title\">{songToPlay.name}</p>\n            <p className=\"current-author\">{songToPlay.author}</p>\n          </> : null}\n      </div> */}\n      {songToPlay ? (\n        <YtLink name={songToPlay.name} author={songToPlay.author} />\n      ) : null}\n      <AudioPlayer\n        className=\"audio-player\"\n        ref={player}\n        showSkipControls\n        onClickNext={nextSong}\n        onClickPrevious={previousSong}\n      />\n    </S.Playback>\n  );\n};\n\nexport default PlaybackView;\n","import React from 'react';\nimport * as S from './MusicBar.styled';\nimport { NavLink, Route, BrowserRouter } from 'react-router-dom';\nimport Search from '../MainRoute/Search/Search';\nimport NewReleases from '../MainRoute/NewReleases/NewReleases';\n// import Playlist from '../MainRoute/Playlist';\nimport SongList from '../SongList/SongList';\nimport PlaybackView from '../PlaybackView/PlaybackView';\n\nconst MusicBar = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <S.Music>\n          <ul>\n            <NavLink exact to=\"/\">\n              <i className=\"fas fa-search\"></i>\n              <p>Search</p>\n            </NavLink>\n            <NavLink to=\"/new-releases\">\n              <i className=\"fas fa-compact-disc\"></i>\n              <p>New releases</p>\n            </NavLink>\n            {/* <NavLink to=\"/playlist\"><i className=\"fas fa-sliders-h\"></i><p>Playlist</p></NavLink> */}\n            <SongList />\n          </ul>\n        </S.Music>\n        <Route path=\"/new-releases\" component={NewReleases} />\n        {/* <Route path=\"/playlist\" component={Playlist} /> */}\n        <Route path=\"/\" component={Search} />\n        <PlaybackView />\n      </BrowserRouter>\n    </>\n  );\n};\nexport default MusicBar;\n","import styled from 'styled-components';\n\nexport const GetMe = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  border: 1px solid ${props => props.theme.alto};\n  border-radius: 20px;\n  padding: 2px 6px;\n  cursor: pointer;\n  background-color: ${props => props.theme.codGray};\n  transition: 0.2s;\n\n  &:hover {\n    background-color: gray;\n  }\n\n  > i {\n    color: white;\n    margin-right: 3px;\n\n    &.hide {\n      display: none;\n    }\n  }\n\n  > img {\n    width: 30px;\n    height: 30px;\n    border-radius: 50px;\n    margin-left: 10px;\n  }\n\n  > p {\n    color: ${props => props.theme.alto};\n    font-size: 12px;\n    font-weight: bold;\n  }\n\n  @media (max-width: 1024px) {\n    display: none;\n  }\n`;\n\nexport const List = styled.ul`\n  position: absolute;\n  display: table;\n  bottom: 65px;\n  right: 28px;\n  color: ${props => props.theme.alto};\n  border: 1px solid ${props => props.theme.alto};\n  background-color: ${props => props.theme.codGray};\n  border-radius: 5px;\n  cursor: pointer;\n\n  &.hide {\n    display: none;\n  }\n\n  > li {\n    display: table-cell;\n    width: 100%;\n    height: 100%;\n    padding: 5px 45px;\n    transition: 0.2s;\n\n    &:hover {\n      background-color: gray;\n    }\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport * as S from './GetMe.styled';\nimport { getMeFetch } from '../../store/reducers/GetMe/getMeCreator';\nimport { useDispatch, useSelector } from 'react-redux';\n\ntype RootState = {\n  getMeReducer: {\n    user: {\n      username: string,\n      photo: string\n    }\n  }\n}\n\nconst GetMe = () => {\n  const list = useRef<HTMLUListElement>(null);\n  const arrowUp = useRef<HTMLElement>(null);\n  const arrowDown = useRef<HTMLElement>(null);\n  const dispatch = useDispatch();\n  const user = useSelector((state: RootState) => state.getMeReducer.user);\n\n  const expandOptions = () => {\n    const hide = 'hide';\n    if (list.current && arrowUp.current && arrowDown.current) {\n      list.current.classList.toggle(hide);\n      arrowDown.current.classList.toggle(hide);\n      arrowUp.current.classList.toggle(hide);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    window.location.href = window.location.origin + window.location.pathname;\n  };\n\n  useEffect(() => {\n    if (!user.username) dispatch(getMeFetch());\n  }, [dispatch, user]);\n\n  return (\n    <>\n      <S.List ref={list} className=\"user-list hide\">\n        <li onClick={logout}>Logout</li>\n      </S.List>\n      <S.GetMe onClick={expandOptions}>\n        {user.username ? (\n          <>\n            <i ref={arrowDown} className=\"fas fa-angle-down\"></i>\n            <i ref={arrowUp} className=\"fas fa-angle-up hide\"></i>\n            <p>{user.username}</p>\n            <img src={user.photo} alt=\"you\" />\n          </>\n        ) : null}\n      </S.GetMe>\n    </>\n  );\n};\n\nexport default GetMe;\n","import { spotifyWebApi } from '../../../spotifyWebApi/spotifyWebApi';\nimport { GET_ME } from '../../actions/actionTypes';\nconst randomUser = 'https://www.kindpng.com/picc/m/80-800188_random-user-random-icon-png-transparent-png.png';\n\nconst getMeFetchSuccess = (name, photo) => ({\n  type: GET_ME,\n  name,\n  photo\n})\n\nexport const getMeFetch = () => dispatch => {\n\n  spotifyWebApi.getMe()\n    .then(res => dispatch(getMeFetchSuccess(res.display_name, res.images.length ? res.images[0].url : randomUser)))\n    .catch(err => console.log(err))\n}","import React from 'react';\nimport getHashParams from './params/getHashParams';\nimport { spotifyWebApi } from './spotifyWebApi/spotifyWebApi';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport MusicBar from './components/MusicBar/MusicBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_LOGGED_IN } from './store/actions/actionTypes';\nimport GetMe from './components/GetMe/GetMe';\n\nconst App = () => {\n  const resetToken = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('expirationDate');\n    alert('Please login again ;)');\n    window.location.href = window.location.origin + window.location.pathname;\n  };\n\n  const loggedIn = useSelector(state => state.appReducer.loggedIn);\n  const dispatch = useDispatch();\n  const storageAccessToken = localStorage.getItem('accessToken');\n\n  if (storageAccessToken) {\n    spotifyWebApi.setAccessToken(\n      JSON.parse(storageAccessToken)\n    );\n    if (!loggedIn) dispatch({ type: SET_LOGGED_IN, bool: true });\n  } else {\n    const params = getHashParams();\n    if (Object.keys(params).length) {\n      const store = JSON.stringify(params.access_token);\n      localStorage.setItem('accessToken', store);\n      localStorage.setItem('expirationDate', Date.now() + 3600 * 1000);\n      spotifyWebApi.setAccessToken(params.access_token);\n      if (!loggedIn) dispatch({ type: SET_LOGGED_IN, bool: true });\n    }\n  }\n\n  const expirationDate = Number(localStorage.getItem('expirationDate'));\n\n  if (expirationDate && expirationDate < Date.now()) {\n    resetToken();\n  } else if (expirationDate) {\n    const timeLeft = expirationDate - Date.now();\n    setTimeout(resetToken, timeLeft);\n  }\n\n  return (\n    <>\n      {loggedIn ? (\n        <div className=\"App\">\n          <MusicBar />\n          <GetMe />\n        </div>\n      ) : (\n        <LoginPage />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","export const dustyGray = '#999';\nexport const alto = '#ddd';\nexport const codGray = '#121212';\nexport const mineShaft = '#282828';","import { GET_NEW_RELEASES } from '../../actions/actionTypes';\n\nconst initialState = {\n  newReleases: []\n}\n\nconst newReleases = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_NEW_RELEASES:\n      return {\n        ...state,\n        newReleases: state.newReleases.concat(action.res)\n      }\n    default:\n      return state;\n  }\n}\n\nexport default newReleases;","import { SET_LOGGED_IN } from '../../actions/actionTypes';\n\nconst initialState = {\n  loggedIn: false\n}\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN:\n      return {\n        ...state,\n        loggedIn: action.bool\n      }\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;","import { GET_SEARCH_LIST, RESET_LIST } from '../../actions/actionTypes';\n\nconst initialState = {\n  searchList: [],\n  isLoading: false\n}\n\nconst searchReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case GET_SEARCH_LIST:\n      return {\n        ...state,\n        searchList: action.res,\n        isLoading: false\n      }\n    case RESET_LIST:\n      return {\n        ...state,\n        searchList: []\n      }\n\n    case 'SET_LOADER':\n      return {\n        ...state,\n        isLoading: true\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default searchReducer;","import { SET_MUSIC_ARR, SET_CLICKED_SONG } from '../../actions/actionTypes';\n\nconst initialState = {\n  clickedSong: null,\n  musicArr: []\n}\n\nconst albumReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case SET_CLICKED_SONG:\n      return {\n        ...state,\n        clickedSong: action.clicked\n      }\n    case SET_MUSIC_ARR:\n      return {\n        ...state,\n        musicArr: action.value\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default albumReducer;","import { SET_SONG_TO_PLAY } from '../../actions/actionTypes';\n\nconst initialState = {\n  songToPlay: null\n}\n\nconst playbackReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case SET_SONG_TO_PLAY:\n      return {\n        ...state,\n        songToPlay: action.song\n      }\n    default:\n      return state;\n  }\n}\n\nexport default playbackReducer;","import { ADD_TO_PLAYLIST, REMOVE_FROM_PLAYLIST } from '../../actions/actionTypes';\n\nconst initialState = {\n  playlist: []\n}\n\nconst playlistReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case ADD_TO_PLAYLIST:\n      return {\n        ...state,\n        playlist: state.playlist.concat(action.song)\n      }\n    case REMOVE_FROM_PLAYLIST:\n      return {\n        ...state,\n        playlist: state.playlist.filter(item => item.id !== action.id)\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default playlistReducer;","import { GET_ME } from '../../actions/actionTypes';\n\nconst initialState = {\n  user: {\n    username: null,\n    photo: null\n  }\n}\n\nconst getMeReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case GET_ME:\n      return {\n        ...state,\n        user: { username: action.name, photo: action.photo }\n      }\n    default:\n      return state;\n  }\n}\n\nexport default getMeReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport * as theme from './theme/theme';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport newReleases from './store/reducers/NewReleases/newReleases';\nimport appReducer from './store/reducers/App/appReducer';\nimport searchReducer from './store/reducers/Search/searchReducer';\nimport albumReducer from './store/reducers/Album/albumReducer';\nimport playbackReducer from './store/reducers/Playback/playbackReducer';\nimport playlistReducer from './store/reducers/Playlist/playlistReducer';\nimport getMeReducer from './store/reducers/GetMe/getMeReducer';\n\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\n\nconst rootReducer = combineReducers({\n  newReleases,\n  appReducer,\n  searchReducer,\n  albumReducer,\n  playbackReducer,\n  playlistReducer,\n  getMeReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}